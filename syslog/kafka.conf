@module mod-java
@define allow-config-dups 1

template template_date_format_root {
    template("${YEAR}-${MONTH}-${DAY} ${HOUR}:${MIN}:${SEC} ${SOURCEIP} RO;${MSGHDR}${MSG}\n");
    template_escape(no);
};


template template_date_format_snmp {
    template("${YEAR}-${MONTH}-${DAY} ${HOUR}:${MIN}:${SEC} ${SOURCEIP} SNMP;${MSGHDR}${MSG}\n");
    template_escape(no);
};


destination syslog_to_kafka {
	python(
		class("syslogng_kafka.kafkadriver.KafkaDestination-2")
	            	on-error("fallback-to-string")
        	    	options(
                		hosts("192.168.0.10:9092")
                		topic("watcher_topic")
                #partition("1")
                #msg_key("src_ip")
                #programs("firewall,nat")
                #broker_version("0.8.2.1")
                #verbose("True")
                #display_stats("True")
                #producer_config("{'client.id': 'sylog-ng-01', 'retry.backoff.ms': 100, 'message.send.max.retries': 5, 'queue.buffering.max.kbytes': 50240, 'default.topic.config': {'request.required.acks': 1, 'request.timeout.ms': 5000, 'message.timeout.ms': 300000}, 'queue.buffering.max.messages': 100000, 'queue.buffering.max.ms': 1000, 'statistics.interval.ms': 15000, 'socket.timeout.ms': 60000, 'retry.backoff.ms':100,}")
                )
    );
};
source watcher_s {
	file("var/log/watcher.log");
};

source auth_log_s {
	file("/var/log/auth.log");
};

source snmp_s {
	file("/var/log/snmp.log");
};

filter watcher_root_acces {
	match("session opened for user root" value("MESSAGE"));
};

filter f_accesos {
	match("ACCESS" value("MESSAGE"));
};

destination syslog_to_kafka {
	file("/var/log/watcher_3.log" template(template_date_format));
};

destination snmp_d {
	file("/var/log/watcher_snmp.log" template(template_date_format_snmp));
};

destination syslog_to_kafka_2 {
        file("/var/log/watcher_2.log");
};

log {
	source(snmp_s);
	destination(snmp_d);
};

log {
    source(watcher_s);
    destination(syslog_to_kafka);
};

source watcher_access_s {
	file("/var/log/watcher_access.log");
};

destination syslog_auth {
	file("/var/log/watcher_root.log" template("template_date_format_root") );
};

log {
	source(watcher_access_s);
	destination(syslog_to_kafka);
	filter(f_accesos);
};


log {
	source(auth_log_s);
	filter(watcher_root_acces);
	destination(syslog_auth);
};
